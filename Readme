<-------------------------------->
|    Bienvenido a FastDelivery   |   
<-------------------------------->

Equipo de Desarrollo Logismatica: 

° Cuauhtli Herrera;
° Gisela Arroyo Galarce;
° Juan Agustin Alejandro;
° Francisco Leyes Campoy

Instalacion de proyecto

1.- Realizar un git clone
2.- Duplica el .env.template
3.- Renombra la copia a .env y completa la informacion del mismo

Documentacion https://documenter.getpostman.com/view/19815687/2s93CUHq9K

Para inicializar el proyecto correr los siguientes comandos:

1.- npm Install || npm i;
2.- npm run dev


Para iniciar el proyecto con docker:
1.- docker build -t my-node-app .
2.- docker run -p 3001:3001 my-node-app

<-- -- -- -- -- -- -- -- -- -- -- -- -- -->

GitFlow Las ramas establecidas son:

-Main: Rama principal donde se encuentra la versión estable y publicada de la aplicación.

-Develop: Rama donde se integran todas las nuevas funcionalidades y correcciones antes de ser publicadas.

-Feature: Ramas temporales para el desarrollo de nuevas funcionalidades, que se integran posteriormente en la rama develop.

-Release: Ramas para la preparación de una nueva versión, donde se realizan pruebas y se asegura que la versión sea estable antes de ser publicada en la rama master.

-Hotfix: Ramas para correcciones de errores críticos en la versión publicada en la rama master, que luego se integran en la rama master y develop.

-BugFix: Ramas para correciones de  errores críticos en la versión publicada en la rama develop, que luego se integran en la rama master y develop.

-------------------------------------------------------------------------------------

Endpoint:

LOGIN
**/api/login**

Método: Post
Parámetros del Body: email, password 

Errores: 
    • 404 / mensaje: “El correo electrónico ${email} no pertenece a ningún usuario”
    • 400 / mensaje: “La contraseña es incorrecta”
    • 500 / Mensaje: “Error – Login”

Respuesta: 
msg: 'Login - User',
payload {
	id: 3,
	name:Juan Perez,
	email: perez@mail.com,
	rol: USER_ROL, 
	ddjj: {
		status: false,
		date: null,
		},
    token: adeijoigf58tu59f,
	}
   
   
REGISTER
**/api/users/register**

Método: Post
Parámetros del Body:  email, password, name

Errores: 
    • 500 / Mensaje: 'Error - Register'

Respuesta: 
msg: 'El Usuario fue creado con éxito', juan@mail.com 

GET ALL USERS
**/api/users/getAllUsers/:limit**

Método: GET
Parámetros del Request: limit

Errores: 
    • 500 / Mensaje: 'Error - Get All Users'
  

Respuesta: 
users

GET USER BY ID
**/api/users/getUserById/:id**

Método: GET
Parámetros del Request: id

Errores: 
    • 500 / Mensaje: 'Error - Get User By Id'
  

Respuesta: 
user


GET ALL USERS BANNED
 **/api/users/getAllUsersBanned/:limit*

Método: GET
Parámetros del Request: limit

Errores: 
    • 500 / Mensaje: 'Error - Get All Users Banned'
  

Respuesta: 
users


UPDATE USER BY ID
 **/api/users/updateUser/:id*

Método: PUT
Parámetros del body: email, name, password, status,
Parámetros del req: id

Errores: 
    • 500 / Mensaje: 'Error - Update User In Status Banned'
  
Respuesta: 
user

UPDATE USER BY ID
 **/api/users/updateUser/:id*

Método: PUT
Parámetros del body: email, name, password, status,
Parámetros del req: id

Errores: 
    • 500 / Mensaje: 'Error - Update User In Status Banned'
  
Respuesta: 
user


DISABLE USER BY ID
(Pasar a un usuario a inactivo)
 **/api/users/disableUser/:id*

Método: PUT
Parámetros del req: id

Errores: 
    • 500 / Mensaje: 'Error - Update User In Status Banned'
  
Respuesta: 
user


FORGOT PASSWORD
(Olvidó contraseña, envía un email con un token para crear una nueva contraseña)
 **/api/users/forgotPassword*

Método: PUT
Parámetros del body: email

Errores: 
    • 500 / Mensaje: 'Error - Send Email'
    • 500 / Mensaje: 'Error - Generate Token'
  
Respuesta: 
    200 / Envía un email
    
    
RESET PASSWORD
(Recuperar contraseña mediante un token, obtiene el usuario y le actualiza por la nueva contraseña)
 **/api/users/reset-password/:token*

Método: GET
Parámetros del req: token
Parámetros del body: password

Errores: 
    • 500 / Mensaje: 'Error - Send Email'
    • 500 / Mensaje: 'Error - Reset Password'
  
Respuesta: 
    204 / Rest Password Success
    
    
GET ALL ORDERS
(Trae todas las órdenes)
 **/api/orders/*

Método: GET
Parámetros del query: statusOrder, idPackage

Errores: 
    • 500 / Mensaje: ''Error Get Order''
  
Respuesta: 
   msg: 'Get Orders',
      total: info.length,
      info,
